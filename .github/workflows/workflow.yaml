name: 'Build and push container to GCP GCR'
on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
jobs:
   # JOB to run change detection
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    outputs:
      # Expose matched filters as job output variable
      projects: ${{ steps.filter.outputs.changes }}
    steps:
    - uses: actions/checkout@v3
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          sandbox3: 
            - 'sandbox3/**'
          
  
  buildandpush:
    needs: changes
    if: ${{ needs.changes.outputs.projects != '[]' && needs.changes.outputs.projects != '' }}
    strategy:
      matrix:
        # Parse JSON array containing names of all filters matching any of changed files          
        project: ${{ fromJSON(needs.changes.outputs.projects) }}
    runs-on: ubuntu-latest

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: "./${{ matrix.project }}"

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    - name: Sets tag for PR
      if: github.event_name != 'push'
      run: |
        echo "DOCKER_IMAGE_TAG=PR-${{github.event.pull_request.number}}" >> $GITHUB_ENV      

    - name: Set tag for merge to main
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: |
        echo "DOCKER_IMAGE_TAG=$(cat version.txt)" >> $GITHUB_ENV

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Google Container Registry
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: _json_key
        password: ${{ secrets.GOOGLE_CREDENTIALS }}

    - name: Build and tag
      uses: docker/build-push-action@v3      
      with:
        context: ./${{ matrix.project }}
        push: true
        tags: gcr.io/sandbox3-372220/tftggatst:${{ env.DOCKER_IMAGE_TAG }}

    - name: Update helm chart in another repository
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      env:
        GITHUB_TOKEN: ${{ secrets.CICD2_GITHUB_TOKEN }}
      run: |
        git clone https://github.com/tftggatst/cicd_repo2.git

        cd cicd_repo2
        git config user.name "tftggatst"
        git config user.email "tftggatst@gmail.com"

        touch test-file.txt
        git add .
        git commit -m "Add test file"

        git push origin main
        